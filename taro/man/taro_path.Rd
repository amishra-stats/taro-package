% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/taro.R
\name{taro_path}
\alias{taro_path}
\alias{taro}
\alias{fit}
\alias{=}
\alias{fit.nlayer,}
\alias{lam}
\alias{lamSel}
\title{Tree aggregated factor regression model (TARO)}
\usage{
taro_path(
  Y,
  X,
  A,
  Ac,
  Bc,
  Z = NULL,
  maxrank = 10,
  nlambda = 40,
  control = list(),
  nfold = 5,
  orthV = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{Y}{response matrix}

\item{X}{covariate matrix (Typically log transform of the microbial abundance data)}

\item{A}{tree guided adjacency matrix}

\item{Ac}{matrix (LHS) for imposing the linearity constraint on the parameters
of the coefficient matrix}

\item{Bc}{vector (RHS) for imposing the linearity constraint on the parameters
of the coefficient matrix}

\item{Z}{control variables}

\item{maxrank}{an integer specifying the maximum desired rank/number of factors}

\item{nlambda}{maximum number of lambda values used for generating the solution path}

\item{control}{a list of internal parameters controlling the model fitting}

\item{nfold}{number of folds for the k-fold cross validation for selecting the tuning parameter}

\item{orthV}{if TRUE, orthogonality of the left singular vector is imposed or not}

\item{verbose}{if TRUE, prints the message implementing the sequential procedure}
}
\value{
\item{C}{estimated coefficient matrix}
  \item{Z}{estimated parameter corresponding to control variables}
  \item{U}{estimated left singular vector matrix }
  \item{D}{estimated singular values}
  \item{V}{estimated right singular vector matrix (loading matrix)}
  \item{lam}{selected lambda values based on the chosen information criterion}
  \item{fit}{optimal parameters estimate including crossvalidation error estimate from each of the sequential step}
}
\description{
A multivariate model for learning the association between continuous multiple
outcomes and high-dimensional predictors that are related by a
phylogenetic/taxonomic tree
}
\examples{
require(taro)
set.seed(123)

#' # Simulate data from a sparse factor regression model
snr <- .25; xrho <- 0.5; nrank <- 3; q <- 50; n = 300; intercept = 0.5
rho = 0.5 # error correlation
\donttest{
input_data <- taro_sim(n, q, nrank, rho, snr, intercept,
                        taxa_table = NULL)

Y <- input_data$Y
X <- input_data$X
A <- input_data$A
phylo <- input_data$tree
n <- nrow(Y); q <- ncol(Y)
set.seed(123)
# Implementation setting
maxrank = 5;
Z = NULL;
A = A;
Ac <- matrix(1,1,ncol = ncol(X)) \%*\% A
Bc <- matrix(0,1,1)
nfold = 5; trace = TRUE; verbose = TRUE
nlambda = 100;PATH = TRUE
control <- taro_control(alpha0 = 0.5, gamma0 = 1, spU = 0.5,
                       inTol = 1e-5, inMaxIter = 300,
                       outMaxIter = 1000,outTol = 1e-8,
                       spV=0.5, lamMaxFac = 1e2, se1 = 1)
# Weight Yes
# fit_seq <- taro_path(Y, X, A, Ac, Bc, Z = NULL, phylo = phylo,
#                       maxrank = 5, nlambda = 100,
#                       control = control,
#                       nfold = 5, orthV = TRUE,
#                       verbose = TRUE)
}
}
\references{
Mishra et al. (2023) \emph{Tree aggregated factor regression model}
}
